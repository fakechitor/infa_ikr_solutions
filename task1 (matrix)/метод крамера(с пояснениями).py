import numpy as np
# 3x+2y=5
# 1x+4y=6
A = np.array([[3,2],[1,4]]) # матрица коэффициентов
b = np.array([5,6]) # вектор свободных членов
# тут надо использовать не обычные списки из пайтона, а списки из библиотеки
A_det = np.linalg.det(A)
if A_det == 0: #проверяем есть ли определитель
    print("Метод Крамера нельзя применить")
else:
    n = len(b) # определяем размерность системы (количество элементов в векторе свободных членов)
    x = np.zeros(n) # создаем пустой массив с нулями
    for i in range(n):
        Ai = A.copy() # создаем копию массива, чтобы не менять исходный
        Ai[:, i] = b  # заменяем i-й столбец на b (тут работает так, что : перебирает все элементы в массиве типо [0,i], [1,i] и тд)
        # и в этом случае будет заменено [3,2] из A на [5,6] ну и там дальше так же
        det_Ai = np.linalg.det(Ai) # находим определитель для полученной матрицы
        x[i] = det_Ai / A_det # вычисляем по формуле крамера
    print("Решение системы методом Крамера:", x)

"""
Идея:
1) создаем матрицы из системы (обязательно использовать массив из numpy)
2) проверяем определитель
3) находим размерность системы
4) создаем пустой массив, в который будем добавлять вычисленные значения
5) по методу крамера  получаем значение
"""


